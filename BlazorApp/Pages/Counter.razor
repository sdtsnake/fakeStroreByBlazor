@page "/counter/{currentCountParameter?}"
@inject ILogger<Counter> logger;

<PageTitle>Counter</PageTitle>

<ModuleTitle Title="Contador"/>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    private int currentCount = 0;

    
    /* 1* Esta es una manera de capturar el parametro que llega por URL*/
    
    
    [Parameter]
    public String? currentCountParameter {get;set;}

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        if(parameters.TryGetValue<String>(nameof(currentCountParameter), out var cuenterParameter)){
            if(cuenterParameter is not null){
                currentCountParameter = cuenterParameter;
            } 

            
        }

        await base.SetParametersAsync(parameters);
    }
    
    /* 2* Esta funcionalidad es para los parametros que llegan despues ? en la URL  */

    [SupplyParameterFromQuery]
    [Parameter]
    public String? counterFromQuery {get;set;}



    protected override void OnParametersSet()
    {
        logger.LogInformation("Se envian los parametros");
    }

    protected override void OnInitialized()
    {
        /* asginamos el resultado de metodo 1* a la variable del counter
        currentCount = currentCountParameter!= null ?  int.Parse(currentCountParameter) : 0;
        */

        /* esta es la manera de obtener los valores del parametro cuando llegar con ? en la URL
        */
        currentCount = counterFromQuery!= null ?  int.Parse(counterFromQuery) : 0;

        logger.LogInformation("Se inicia el componente");
    }

    protected override void OnAfterRender(bool firstRender)
    {
        logger.LogInformation("esto ocurre despues de inicializar el componente");
    }

    private void IncrementCount()
    {
        currentCount++;
    }
}
